# Reference Materials {#sec-ref-mats}

These materials / links were last checked on October 2, 2025. All apologies for links that no longer work. Please email me at [CRunyon@nbme.org](mailto:CRunyon@nbme.org) if you notice something no longer works so I can change / remove the link.
  
## Background Information on GPTs

The [3Blue1Brown YouTube Channel](https://www.youtube.com/c/3blue1brown){target="_blank"} provides several good videos on the some of the technical aspects of large language models.

* The [Neural Networks](https://www.youtube.com/playlist?list=PLZHQObOWTQDNU6R1_67000Dx_ZCJB-3pi){target="_blank"} section is particularly informative.

Anthropic's paper [On the Biology of a Large Language Model](https://transformer-circuits.pub/2025/attribution-graphs/biology.html){target="_blank"} is particularly interesting.

This [post on lesswrong](https://www.lesswrong.com/posts/XGHf7EY3CK4KorBpw/understanding-llms-insights-from-mechanistic){target="_blank"} provides a nice high-level summary for understanding LLMs.

---

## Reference Guides

[OpenAI Cookbook](https://cookbook.openai.com/){target="_blank"}

---

## Newsletters

### TL:DR

### Superhuman

### The Neuron

### Gary Marcus Substack

### Jack Anthropic Substack (The Signal?)

### Michael Jabbour Substack

### One Useful Thing

---

## Books

[AI Engineering](https://www.oreilly.com/library/view/ai-engineering/9781098166298/){target="_blank"} by Chip Huyen is a slightly more advanced read for those interested in building AI products.

[Prompt Engineering for Generative AI: Future-Proof Inputs for Reliable AI Outputs](https://www.oreilly.com/library/view/prompt-engineering-for/9781098153427/){target="_blank"} by James Phoenix and Mike Taylor is also a good resource for learning more about prompt engineering. Focused more on earlier (non-reasoning) models, but some important parts carry through.

[Brave New Words](https://www.penguinrandomhouse.com/books/740806/brave-new-words-by-salman-khan/) by Sal Khan (of [Khan Academy](https://www.khanacademy.org/) fame) is an interesting perspective on how AI will change education.

---

## Blogs

Are there any?

---

## Training

### DataCamp

---

## LLM-specific R Packages {#sec-r-packages}

A number of packages have been developed to more easily facilitate interacting with LLMs via R. 
Many of these packages are useful (we'll cover some of those in the workshop), whereas other packages include some developer design decisions that don't work particularly well for my usual workflows. 
I've also found that some packages aren't often updated / maintained. 
The syntax to interact with API models can change as new models are released (e.g., [ChatGPT5](@sec-gpt5)), which can render some of the package functionality obsolete.

Below is a non-exhaustive list of packages that I've found to interact with LLMs. 
This is not meant to be exhaustive or a curated list; it's only to provide you with information about the packages you'll be using in the workshop (and others) in the case you find them helpful for your workflow.
All package summaries were initially generated with AI.
Some summaries have been edited, some have not.

### ellmer
**ellmer** [Overview](https://ellmer.tidyverse.org/){target="_blank"} [CRAN](https://cran.r-project.org/web/packages/ellmer/index.html){target="_blank"} [Documentation]( https://cran.r-project.org/web/packages/ellmer/refman/ellmer.html){target="_blank"}  

**ellmer** is an R package that provides a unified interface for interacting with large language models from over 17 providers including OpenAI, Anthropic, Google Gemini, and AWS Bedrock. It supports advanced features like streaming outputs, tool/function calling, structured data extraction, and multimodal inputs. Chat objects are stateful and maintain conversation context, enabling both interactive console-based conversations and programmatic use in R scripts and applications.

### tidyprompt
**tidyprompt** [Overview](https://github.com/KennispuntTwente/tidyprompt){target="_blank"} [CRAN](https://cran.r-project.org/web/packages/tidyprompt/index.html){target="_blank"} [Documentation](https://cran.r-project.org/web/packages/tidyprompt/refman/tidyprompt.html){target="_blank"}  

**tidyprompt** is an R package that provides a compositional framework (“prompt wraps”) for building prompts enriched with logic, validation, and extraction functions when interacting with LLMs. It supports structured output, retry/feedback loops, reasoning strategies (e.g. ReAct or chain-of-thought), and even autonomous R code or function calling as part of an LLM dialogue. The package is provider-agnostic, meaning its features can layer on top of any chat completion API (e.g. via ellmer) to produce more robust, predictable interactions.

### tidyllm
**tidyllm** [Overview](https://github.com/edubruell/tidyllm){target="_blank"} [CRAN](https://cran.r-project.org/web/packages/tidyllm/index.html){target="_blank"} [Documentation](https://cran.r-project.org/web/packages/tidyllm/refman/tidyllm.html){target="_blank"}  

**tidyllm** provides a tidy, pipeline-friendly interface for interacting with multiple LLM APIs (e.g. Claude, OpenAI, Gemini, Mistral) and local models via Ollama. It supports multimodal inputs (text, images, PDFs), maintains conversational history, handles batching and rate limits, and allows structured schema-based extraction of responses. The design emphasizes composability and integration into typical R data workflows.  

### chattr
**chattr** [Overview](https://mlverse.github.io/chattr/){target="_blank"} [CRAN](https://cran.r-project.org/web/packages/chattr/index.html){target="_blank"} [Documentation](https://cran.r-project.org/web/packages/chattr/refman/chattr.html){target="_blank"}  

**chattr** is an R package that enables interactive communication with large language models directly within RStudio using a Shiny gadget or from the console. It enriches prompts with contextual information (e.g. loaded data frames) and integrates with various back-ends (e.g. OpenAI, Copilot, local LlamaGPT) via the ellmer interface. The package is geared toward exploratory workflows and rapid prototyping of LLM-assisted analysis.  

### LLMAgentR
**LLMAgentR** [Overview](https://github.com/knowusuboaky/LLMAgentR){target="_blank"} [CRAN](https://cran.r-project.org/web/packages/LLMAgentR/index.html){target="_blank"} [Documentation](https://cran.r-project.org/web/packages/LLMAgentR/refman/LLMAgentR.html){target="_blank"}  

**LLMAgentR** is an R package for constructing language model “agents” using a modular, graph-based execution framework inspired by LangChain/LangGraph architectures. It offers a suite of agent types (e.g. code generation, data wrangling, SQL agents, document summarization) that iteratively reason, generate R code, execute, debug, and explain results. The package aims to support reproducible AI workflows for analysis, research, and automation by integrating LLM reasoning and domain logic.

### PacketLLM
**PacketLLM** [Overview](https://antoniczolgowski.r-universe.dev/PacketLLM){target="_blank"} [CRAN](https://cran.r-project.org/web/packages/PacketLLM/index.html){target="_blank"} [Documentation](https://cran.r-project.org/web/packages/PacketLLM/vignettes/PacketLLM-introduction.html){target="_blank"}  

**PacketLLM** offers an interactive RStudio gadget interface for chatting with OpenAI LLMs (e.g. GPT-5 and variants) directly within the R environment. It supports multiple simultaneous conversation tabs, file upload (e.g. .R, PDF, DOCX) as contextual input, and per-conversation system message configuration. API calls are handled asynchronously (via promises + future) to avoid blocking the R console during model interactions.

---

## Shiny-related Resources

Posit has [many useful things](https://shiny.posit.co/){target="_blank"}.

- [Materials for the R language start here](https://shiny.posit.co/r/getstarted/shiny-basics/lesson1/){target="_blank"}.
- [Materials for the Python language start here](https://shiny.posit.co/py/){target="_blank"}.

[nanxstats has nicely organized many Shiny extension packages.](https://github.com/nanxstats/awesome-shiny-extensions){target="_blank"}

---

## Legal Considerations

The information provided here is for general informational purposes only and does not constitute legal advice. You should not act upon any information presented without first seeking qualified legal counsel regarding your specific situation. The authors disclaim any liability for actions taken based on the content provided here.
