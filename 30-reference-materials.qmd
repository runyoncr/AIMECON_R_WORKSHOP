# Reference Materials {#sec-ref-mats}

These materials / links were last checked on October 2, 2025. All apologies for links that no longer work. Please email me at [CRunyon@nbme.org](mailto:CRunyon@nbme.org) if you have the time to let me know something's wrong. (Thanks in advance!)
  
## Background Information on GPTs

The [3Blue1Brown YouTube Channel](https://www.youtube.com/c/3blue1brown){target="_blank"} provides several good videos on the some of the technical aspects of large language models.

* The [Neural Networks](https://www.youtube.com/playlist?list=PLZHQObOWTQDNU6R1_67000Dx_ZCJB-3pi){target="_blank"} section is particularly informative.

Anthropic's paper [On the Biology of a Large Language Model](https://transformer-circuits.pub/2025/attribution-graphs/biology.html){target="_blank"} is particularly interesting.

This [post on lesswrong](https://www.lesswrong.com/posts/XGHf7EY3CK4KorBpw/understanding-llms-insights-from-mechanistic) provides a nice high-level summary for understanding LLMs.

***

## Reference Guides (including Prompt Engineering)

[promptingguide.ai](https://www.promptingguide.ai/) is a great resources for learning more about prompt engineering techniques

[Anthropic's Prompt Engineering Guide](https://docs.claude.com/en/docs/build-with-claude/prompt-engineering/overview)
- Some directions on [uploading files via API](https://docs.claude.com/en/api/files-create)

[OpenAI Cookbook](https://cookbook.openai.com/)
[OpenAI's Prompt Engineering Guide](https://platform.openai.com/docs/guides/prompt-engineering)

[Google Gemini's Prompt Engineering Guide](https://ai.google.dev/gemini-api/docs/prompting-strategies)
- Includes directions on [uploading a file via API](https://ai.google.dev/gemini-api/docs/files#prompt-guide) as part of a prompt.

***
## Newsletters

The following 3 newsletters are sent out M-F. They're broad in nature (industry trends, policy information, etc) but also include useful information related to assessment (model updates, new model features, etc).

### [The Neuron](https://www.theneuron.ai/newsletter)
- Has a searchable archive of previous posts that is really useful.

### [Superhuman](https://www.superhuman.ai/)
- Also has a searchable archive.

### [TL:DR AI](https://tldr.tech/ai)
-  Part of the [TL:DR Tech](https://tldr.tech/) network.

### [The Signal Substack](https://thesignal.substack.com/)
- Only published on Sunday, highlights the 3-5 most important AI news stories of the week.

### [Gary Marcus Substack](https://substack.com/@garymarcus)
- Professor Emeritus of Psychology and Neural Science at NYU
- A bit of an AI pessimist, but it's helpful to offset the deluge of AI excitement

### [Jack Clark Substack](https://substack.com/@importai)
- Co-founder of Anthropic
- He was on the Rick Rubin podcast (Tetragrammaton) and [it's a fun listen](https://www.tetragrammaton.com/content/jack-clark)

### [Michael Jabbour Substack](https://michaeljjabbour.substack.com/)
- AI Innovation Officer at Microsoft

### [One Useful Thing](oneusefulthing.org)
- by Ethan Mollick, author of the "Co-Intelligence" book mentioned below.

***

## Podcasts

### The AI Daily Brief
- "A daily news analysis show on all things artificial intelligence. NLW looks at AI from multiple angles, from the explosion of creativity brought on by new tools like Midjourney and ChatGPT to the potential disruptions to work and industries as we know them to the great philosophical, ethical and practical questions of advanced general intelligence, alignment and x-risk."
- Short (usually < 30 min.) daily podcasts on various topics. Some are more applicable than others.
  - I found [this episode (Spotify link)](https://open.spotify.com/episode/0Yv0q5BwKlTEIJbfiWeN5X?si=K2eIXVf-RmuNi2eEyywUbQ) on what's helping companies in AI adoption to be broadly interesting.
  - I also like [this episode (Spotify link)](https://open.spotify.com/episode/2efJsPhwniSmaKSbriCyM5?si=9qfi1scRTguDhAcvSfLcXQ) on "5 Prompting Tricks to Make Your AI Less Average" to be interesting.
- [Spotify](https://open.spotify.com/show/7gKwwMLFLc6RmjmRpbMtEO) , [Apple](https://podcasts.apple.com/us/podcast/the-ai-daily-brief-artificial-intelligence-news/id1680633614)
- Also a [YouTube Channel](https://www.youtube.com/@AIDailyBrief)

### Hard Fork
- Part of the New York Times collection of podcasts: "'Hard Fork' is a show about the future that’s already here. Each week, journalists Kevin Roose and Casey Newton explore and make sense of the latest in the rapidly changing world of tech."
  - **Requires an account** (maybe free is sufficient? I'm a NYT subscriber anyway.)
  - [This episode](https://www.nytimes.com/2025/09/05/podcasts/hardfork-education-alpha-school.html) - "AI School is in Session: Two Takes on the Future of Education" was cool.

- [New York Times](https://www.nytimes.com/column/hard-fork), [Spotify](https://open.spotify.com/show/44fllCS2FTFr2x2kjP9xeT), [Apple](https://podcasts.apple.com/us/podcast/hard-fork/id1528594034)

```{r, eval = FALSE, echo = FALSE}

# ### AI Breakdown
# - "'AI Breakdown' dives deep into the world of artificial intelligence, exploring the latest advancements and trends shaping this rapidly evolving field."
# - [Spotify](https://open.spotify.com/show/2mCr8Laiq2oKhICMemxGoi), [Apple]()
# 
# ### AI Breakdown (yes, same name)
# - "The podcast where we use AI to breakdown the recent AI papers and provide simplified explanations of intricate AI topics for educational purposes.
# The content ... is generated automatically by utilizing LLM and text to speech technologies."
# - [Spotify](https://open.spotify.com/show/5nr8blvyQwadadxV0gXaeu)

```

***

## Online Training / YouTube Channels

### [DeepLearning.AI](https://learn.deeplearning.ai/)
- Many great courses, such as [Evaluating AI Agents](https://learn.deeplearning.ai/courses/evaluating-ai-agents/lesson/sqkza/introduction) and [Orchestrating Workflows for GenAI Applications](https://learn.deeplearning.ai/courses/orchestrating-workflows-for-genai-applications/lesson/tw64g/introduction)
- The also have a nice [YouTube channel](https://www.youtube.com/c/deeplearningai)

### DataCamp
- Many [AI Skill Tracks](https://app.datacamp.com/learn/skill-tracks?topics=ai)

### [Anthropic YouTube Channel](https://www.youtube.com/@anthropic-ai)

### [OpenAI YouTube Channel](https://www.youtube.com/@OpenAI)

### [Cursor YouTube Channel](https://www.youtube.com/@cursor_ai)
- [Cursor](https://cursor.com/) is a fantastic AI coding assistant

***

## Books

[AI Engineering](https://www.oreilly.com/library/view/ai-engineering/9781098166298/) by Chip Huyen is a slightly more advanced read for those interested in building AI products.

[Prompt Engineering for Generative AI: Future-Proof Inputs for Reliable AI Outputs](https://www.oreilly.com/library/view/prompt-engineering-for/9781098153427/) by James Phoenix and Mike Taylor is also a good resource for learning more about prompt engineering. Focused more on earlier (non-reasoning) models, but some important parts carry through.

[Brave New Words](https://www.penguinrandomhouse.com/books/740806/brave-new-words-by-salman-khan/) by Sal Khan (of [Khan Academy](https://www.khanacademy.org/) fame) is an interesting perspective on how AI will change education.

[Co-Intelligence: Living and Working with AI](https://www.penguinrandomhouse.com/books/741805/co-intelligence-by-ethan-mollick/) by Ethan Mollick. More accessible discussion of AI, and might not be too helpful to those that have been interested in or working in the field for a bit.

***

## LLM-specific R Packages {#sec-r-llm-packages}

A number of packages have been developed to more easily facilitate interacting with LLMs via R. 
Many of these packages are useful (we'll cover some of those in the workshop), whereas other packages include some developer design decisions that don't work particularly well for my usual workflows. 
I've also found that some packages aren't often updated / maintained. 
The syntax to interact with API models can change as new models are released (e.g., [ChatGPT5](08-gen-ai-parameters.qmd#sec-gpt5)), which can render some of the package functionality obsolete.

Below is a non-exhaustive list of packages that I've found to interact with LLMs. 
This is not meant to be exhaustive or a curated list; it's only to provide you with information about the packages you'll be using in the workshop (and others) in the case you find them helpful for your workflow.
All package summaries were initially generated with AI.
Some summaries have been edited, some have not.

### ellmer
**ellmer** [Overview](https://ellmer.tidyverse.org/){target="_blank"} [CRAN](https://cran.r-project.org/web/packages/ellmer/index.html){target="_blank"} [Documentation]( https://cran.r-project.org/web/packages/ellmer/refman/ellmer.html){target="_blank"}  

**ellmer** is an R package that provides a unified interface for interacting with large language models from over 17 providers including OpenAI, Anthropic, Google Gemini, and AWS Bedrock. It supports advanced features like streaming outputs, tool/function calling, structured data extraction, and multimodal inputs. Chat objects are stateful and maintain conversation context, enabling both interactive console-based conversations and programmatic use in R scripts and applications.

### tidyprompt
**tidyprompt** [Overview](https://github.com/KennispuntTwente/tidyprompt){target="_blank"} [CRAN](https://cran.r-project.org/web/packages/tidyprompt/index.html){target="_blank"} [Documentation](https://cran.r-project.org/web/packages/tidyprompt/refman/tidyprompt.html){target="_blank"}  

**tidyprompt** is an R package that provides a compositional framework (“prompt wraps”) for building prompts enriched with logic, validation, and extraction functions when interacting with LLMs. It supports structured output, retry/feedback loops, reasoning strategies (e.g. ReAct or chain-of-thought), and even autonomous R code or function calling as part of an LLM dialogue. The package is provider-agnostic, meaning its features can layer on top of any chat completion API (e.g. via ellmer) to produce more robust, predictable interactions.

### tidyllm
**tidyllm** [Overview](https://github.com/edubruell/tidyllm){target="_blank"} [CRAN](https://cran.r-project.org/web/packages/tidyllm/index.html){target="_blank"} [Documentation](https://cran.r-project.org/web/packages/tidyllm/refman/tidyllm.html){target="_blank"}  

**tidyllm** provides a tidy, pipeline-friendly interface for interacting with multiple LLM APIs (e.g. Claude, OpenAI, Gemini, Mistral) and local models via Ollama. It supports multimodal inputs (text, images, PDFs), maintains conversational history, handles batching and rate limits, and allows structured schema-based extraction of responses. The design emphasizes composability and integration into typical R data workflows.  

### chattr
**chattr** [Overview](https://mlverse.github.io/chattr/){target="_blank"} [CRAN](https://cran.r-project.org/web/packages/chattr/index.html){target="_blank"} [Documentation](https://cran.r-project.org/web/packages/chattr/refman/chattr.html){target="_blank"}  

**chattr** is an R package that enables interactive communication with large language models directly within RStudio using a Shiny gadget or from the console. It enriches prompts with contextual information (e.g. loaded data frames) and integrates with various back-ends (e.g. OpenAI, Copilot, local LlamaGPT) via the ellmer interface. The package is geared toward exploratory workflows and rapid prototyping of LLM-assisted analysis.  

### LLMAgentR
**LLMAgentR** [Overview](https://github.com/knowusuboaky/LLMAgentR){target="_blank"} [CRAN](https://cran.r-project.org/web/packages/LLMAgentR/index.html){target="_blank"} [Documentation](https://cran.r-project.org/web/packages/LLMAgentR/refman/LLMAgentR.html){target="_blank"}  

**LLMAgentR** is an R package for constructing language model “agents” using a modular, graph-based execution framework inspired by LangChain/LangGraph architectures. It offers a suite of agent types (e.g. code generation, data wrangling, SQL agents, document summarization) that iteratively reason, generate R code, execute, debug, and explain results. The package aims to support reproducible AI workflows for analysis, research, and automation by integrating LLM reasoning and domain logic.

### PacketLLM
**PacketLLM** [Overview](https://antoniczolgowski.r-universe.dev/PacketLLM){target="_blank"} [CRAN](https://cran.r-project.org/web/packages/PacketLLM/index.html){target="_blank"} [Documentation](https://cran.r-project.org/web/packages/PacketLLM/vignettes/PacketLLM-introduction.html){target="_blank"}  

**PacketLLM** offers an interactive RStudio gadget interface for chatting with OpenAI LLMs (e.g. GPT-5 and variants) directly within the R environment. It supports multiple simultaneous conversation tabs, file upload (e.g. .R, PDF, DOCX) as contextual input, and per-conversation system message configuration. API calls are handled asynchronously (via promises + future) to avoid blocking the R console during model interactions.
